<!-- DO NOT EDIT
This file is generated from gen-src/README.md.ejs. -->
<% const base = 'https://storage.googleapis.com/bigquery-runner/' -%>
# BigQuery Runner [![GitHub Actions](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fminodisk%2Fbigquery-runner%2Fbadge%3Fref%3Dmain&style=flat-square)](https://actions-badge.atrox.dev/minodisk/bigquery-runner/goto?ref=main) [![Visual Studio Marketplace Version](https://img.shields.io/visual-studio-marketplace/v/minodisk.bigquery-runner?style=flat-square)](https://marketplace.visualstudio.com/items?itemName=minodisk.bigquery-runner) [![Codecov](https://img.shields.io/codecov/c/github/minodisk/bigquery-runner?style=flat-square)](https://app.codecov.io/gh/minodisk/bigquery-runner/)

An extension to query BigQuery directly and view the results in VSCode.

![Preview](https://user-images.githubusercontent.com/514164/180352233-ed635538-f064-4389-814a-c3ec306aa832.gif)

## Features

- Mark errors in queries.
    - If the query error can be corrected automatically, suggest a candidate for a quick fix.
- Run queries:
    - from files.
    - from selected text.
    - with query parameters.
- Display the results in viewers:
    - Rows
        - Fast rendering of large result tables.
        - Pagination.
        - Can be downloaded as a file.
    - Table
        - Temporary tables can be opened in yet another viewer.
    - Schema
    - Routine
    - Job
- Download the rows in a variety of formats, both from the viewer and from the query file:
    - JSON Lines
    - JSON
    - CSV
    - Markdown
    - Plain text
        - Pretty formatted text like a table.
- All operations can be executed from [commands](#commands).
    - Therefore, it can be set to be performed with [keyboard shortcuts](#keyboard-shortcuts).
    - Of course, it can also be operated from the GUI.

## Installation

1. Go to [the page of this extension in Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=minodisk.bigquery-runner).
2. Click the `Install` button.
3. This will open the VSCode page for this extension, and click the `Install` button.

## Authentication

This extension requires authentication to the Google Cloud API. You can get started by authenticating in one of the following two ways.

### Gcloud Credential ([Recommended](https://cloud.google.com/iam/docs/best-practices-service-accounts#development))

<!-- 1. [Install the gcloud CLI](https://cloud.google.com/sdk/docs/install).
1. Run `BigQuery Runner: Login` in the VSCode command palette.
1. Set `bigqueryRunner.projectId` in `setting.json`.

or -->

1. [Install the gcloud CLI](https://cloud.google.com/sdk/docs/install).
1. Run [`gcloud auth application-default login`](https://cloud.google.com/sdk/gcloud/reference/auth/application-default) in your terminal.
1. Set `bigqueryRunner.projectId` in `setting.json`.

- Don't set `bigqueryRunner.keyFilename` in `setting.json`.
- Don't set `GOOGLE_APPLICATION_CREDENTIALS` as an environment variable.

### Service Account Key

1. [Create a service account and its key](https://cloud.google.com/docs/authentication/getting-started).
    - Give the service account the necessary roles. Such as [`roles/bigquery.user`](https://cloud.google.com/bigquery/docs/access-control#bigquery.user) for example.
1. Tell the key path to this extension in one of the following two ways:
    - Set the path to the key `bigqueryRunner.keyFilename` in `settings.json`.
    - [Set the path to the key as the environment variable `GOOGLE_APPLICATION_CREDENTIALS`](https://cloud.google.com/docs/authentication/getting-started#setting_the_environment_variable).

## Usage

1. Open a query file with `.bqsql` extension.
1. Open the command palette.
1. Run `BigQuery Runner: Run`.

### Query parameters

If query has one or more named parameters, the extension will ask you for the values of that parameter. The values must be given in JSON format, e.g. quotation marks should be used for simple values such as `"20231224"`. See below for more complex examples.

Once set, the parameters are saved for future use and should be reset if necessary using the [bigqueryRunner.clearParams](#bigquery-runner-clear-parameters) command.

![Parameters usage](https://user-images.githubusercontent.com/514164/178248203-a24126dc-4ade-4e6f-93ae-200702edfa51.gif)

## Commands

<% contributes.commands.forEach((command) => { -%>
### <%- command.title %>

|ID|
|---|
|<%- command.command %>|

<%- command.description %>

<% }) -%>
## Configuration

The extension can be customized by modifying your `settings.json` file. The available configuration options, and their defaults, are below.

<% Object.keys(contributes.configuration.properties).forEach((property) => {
  const value = contributes.configuration.properties[property]
-%>
### `<%- property -%>`

|Type|Default|<% if (value.enum) { %>Enum|<% } %>
|---|---|<% if (value.enum) { %>---|<% } %>
|<%- Array.isArray(value.type) ? value.type.join(' &#x7C; ') : value.type %>|<%- JSON.stringify(value.default) %>|<% if (value.enum) { %><%- value.enum.map(JSON.stringify, JSON).join(' &#x7C; ') %>|<% } %>

<%- value.description -%>

<% if (value.screenshot) { -%>
![<%- property %>](<%- base %><%- value.screenshot %>)
<% } -%>

<% }) -%>

## Additional Settings

### Keyboard shortcuts

`keybindings.json`:

```json:keybindings.json
[
  {
    "key": "cmd+enter",
    "command": "bigqueryRunner.run",
    "when": "resourceLangId in bigqueryRunner.languageIds || resourceExtname in bigqueryRunner.extensions"
  },
  {
    "key": "space h",
    "command": "bigqueryRunner.prevPage",
    "when": "resourceLangId in bigqueryRunner.languageIds || resourceExtname in bigqueryRunner.extensions && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' || vim.mode == 'VisualLine'"
  },
  {
    "key": "space l",
    "command": "bigqueryRunner.nextPage",
    "when": "resourceLangId in bigqueryRunner.languageIds || resourceExtname in bigqueryRunner.extensions && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' || vim.mode == 'VisualLine'"
  }
]
```

### Syntax highlighting `.bqsql` files as SQL

`settings.json`:

```json:settings.json
{
  "files.associations": {
    "*.bqsql": "sql"
  }
}
```

## More documents

### Changelog

If you want to know the difference between each release, see [CHANGELOG.md](CHANGELOG.md)

### Contributing

When you create an issue, pull request, or fork see [CONTRIBUTING.md](CONTRIBUTING.md)

### License

Apache 2.0 licensed. See the [LICENSE](LICENSE) file for details.
This extension is forked from [google/vscode-bigquery](https://github.com/google/vscode-bigquery).
